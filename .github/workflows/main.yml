name: Build & Deploy to Railway (.NET 8 Self-Contained)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Ensure NuGet source for Azure DevOps feed
        run: |
          # Detect and remove existing source pointing to Azure DevOps URL (regardless of name)
          existing_source_name=$(dotnet nuget list source | grep "https://pkgs.dev.azure.com/makersfunds/_packaging/Core/nuget/v3/index.json" | awk -F ': ' '{print $1}')
          if [ -n "$existing_source_name" ]; then
            dotnet nuget remove source "$existing_source_name"
          fi
      
          # Add fresh source with name "Makers"
          dotnet nuget add source "https://pkgs.dev.azure.com/makersfunds/_packaging/Core/nuget/v3/index.json" \
            --name "Makers" \
            --username "any" \
            --password "${{ secrets.AZURE_DEVOPS_PAT }}" \
            --store-password-in-clear-text

      - name: Restore dependencies
        run: dotnet restore MFFVP.sln --configfile nuget.config

      - name: Build
        run: dotnet build MFFVP.sln --no-restore --configuration Release --configfile nuget.config

      - name: Test
        run: dotnet test MFFVP.sln --no-build --configuration Release --configfile nuget.config

      - name: Publish
        run: dotnet publish src/API/MFFVP.Api/MFFVP.Api.csproj -c Release -o publish --no-build --configfile nuget.config

      - name: Copy startup files to publish folder
        run: |
          cp src/API/MFFVP.Api/Dockerfile publish/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: publish

  deploy-to-railway:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    needs: build-and-test
    runs-on: ubuntu-latest
    container: ghcr.io/railwayapp/cli:latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
      RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app
          path: publish

      - name: Deploy to Railway
        run: railway up --ci --service=${{ env.RAILWAY_SERVICE_ID }} --path-as-root publish

  sync-to-azure-devops:
    name: Sync to Azure DevOps
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Add Azure DevOps remote
        run: |
          git remote add azure "https://username:${{ secrets.AZURE_PAT }}@${{ secrets.AZURE_REPO_URL }}"
          git push azure HEAD:refs/heads/main --force
