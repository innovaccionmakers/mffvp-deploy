// <auto-generated />
using System;
using Activations.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Activations.Infrastructure.Database.Migrations
{
    [DbContext(typeof(ActivationsDbContext))]
    partial class ActivationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("activations")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Activations.Domain.Affiliates.Affiliate", b =>
                {
                    b.Property<int>("AffiliateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("affiliate_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AffiliateId"));

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("activation_date");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identification");

                    b.Property<string>("IdentificationType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identification_type");

                    b.Property<bool>("MeetsRequirements")
                        .HasColumnType("boolean")
                        .HasColumnName("meets_requirements");

                    b.Property<bool>("Pensioner")
                        .HasColumnType("boolean")
                        .HasColumnName("pensioner");

                    b.HasKey("AffiliateId")
                        .HasName("pk_affiliates");

                    b.ToTable("affiliates", "activations");
                });

            modelBuilder.Entity("Activations.Domain.MeetsPensionRequirements.MeetsPensionRequirement", b =>
                {
                    b.Property<int>("MeetsPensionRequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("meets_pension_requirement_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MeetsPensionRequirementId"));

                    b.Property<int>("AffiliateId")
                        .HasColumnType("integer")
                        .HasColumnName("affiliate_id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creation_date");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiration_date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.HasKey("MeetsPensionRequirementId")
                        .HasName("pk_meets_pension_requirements");

                    b.ToTable("meets_pension_requirements", "activations");
                });
#pragma warning restore 612, 618
        }
    }
}
