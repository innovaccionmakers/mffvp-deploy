// <auto-generated />
using System;
using System.Text.Json;
using Associate.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Associate.Infrastructure.Database.Migrations
{
    [DbContext(typeof(AssociateDbContext))]
    [Migration("20250529204931_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("afiliados")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Associate.Domain.Activates.Activate", b =>
                {
                    b.Property<int>("ActivateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActivateId"));

                    b.Property<DateTime>("ActivateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_activacion");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificacion");

                    b.Property<string>("IdentificationType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_identificacion");

                    b.Property<bool>("MeetsPensionRequirements")
                        .HasColumnType("boolean")
                        .HasColumnName("cumple_requisitos_pension");

                    b.Property<bool>("Pensioner")
                        .HasColumnType("boolean")
                        .HasColumnName("pensionado");

                    b.HasKey("ActivateId");

                    b.ToTable("activacion_afiliados", "afiliados");
                });

            modelBuilder.Entity("Associate.Domain.ConfigurationParameters.ConfigurationParameter", b =>
                {
                    b.Property<int>("ConfigurationParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConfigurationParameterId"));

                    b.Property<bool>("Editable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("editable");

                    b.Property<string>("HomologationCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("codigo_homologacion");

                    b.Property<JsonDocument>("Metadata")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasColumnName("metadata")
                        .HasDefaultValueSql("'{}'");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("padre_id");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<bool>("System")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("sistema");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("Generico")
                        .HasColumnName("tipo");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("uuid")
                        .HasDefaultValueSql("uuid_generate_v7()");

                    b.HasKey("ConfigurationParameterId");

                    b.HasIndex("ParentId");

                    b.ToTable("parametros_configuracion", "afiliados");
                });

            modelBuilder.Entity("Associate.Domain.PensionRequirements.PensionRequirement", b =>
                {
                    b.Property<int>("PensionRequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PensionRequirementId"));

                    b.Property<int>("ActivateId")
                        .HasColumnType("integer")
                        .HasColumnName("afiliado_id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_vencimiento");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_inicio");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("estado");

                    b.HasKey("PensionRequirementId");

                    b.HasIndex("ActivateId");

                    b.ToTable("requisitos_pension", "afiliados");
                });

            modelBuilder.Entity("Associate.Domain.ConfigurationParameters.ConfigurationParameter", b =>
                {
                    b.HasOne("Associate.Domain.ConfigurationParameters.ConfigurationParameter", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Associate.Domain.PensionRequirements.PensionRequirement", b =>
                {
                    b.HasOne("Associate.Domain.Activates.Activate", null)
                        .WithMany()
                        .HasForeignKey("ActivateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Associate.Domain.ConfigurationParameters.ConfigurationParameter", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
