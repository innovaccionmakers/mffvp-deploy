// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Trusts.Infrastructure.Database;

#nullable disable

namespace Trusts.Infrastructure.Database.Migrations
{
    [DbContext(typeof(TrustsDbContext))]
    [Migration("20250514133839_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("fideicomisos")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Trusts.Domain.TrustHistories.TrustHistory", b =>
                {
                    b.Property<long>("TrustHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("historico_fideicomiso_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TrustHistoryId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha");

                    b.Property<decimal>("Earnings")
                        .HasColumnType("numeric")
                        .HasColumnName("rendimiento");

                    b.Property<string>("SalesUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comercial_id");

                    b.Property<long>("TrustId")
                        .HasColumnType("bigint");

                    b.HasKey("TrustHistoryId");

                    b.HasIndex("TrustId");

                    b.ToTable("historicos_fideicomisos", "fideicomisos");
                });

            modelBuilder.Entity("Trusts.Domain.Trusts.Trust", b =>
                {
                    b.Property<long>("TrustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fideicomiso_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TrustId"));

                    b.Property<int>("AffiliateId")
                        .HasColumnType("integer")
                        .HasColumnName("afiliado_id");

                    b.Property<decimal>("AvailableAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("disponible");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<decimal>("ContingentWithholding")
                        .HasColumnType("numeric")
                        .HasColumnName("retencion_contingente");

                    b.Property<decimal>("ContingentWithholdingPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("porcentaje_retencion_contingente");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<decimal>("Earnings")
                        .HasColumnType("numeric")
                        .HasColumnName("rendimiento");

                    b.Property<decimal>("EarningsWithholding")
                        .HasColumnType("numeric")
                        .HasColumnName("retencion_rendimiento");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("integer")
                        .HasColumnName("objetivo_id");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer")
                        .HasColumnName("portafolio_id");

                    b.Property<decimal>("Principal")
                        .HasColumnType("numeric")
                        .HasColumnName("capital");

                    b.Property<int>("TaxCondition")
                        .HasColumnType("integer")
                        .HasColumnName("condicion_tributaria");

                    b.Property<decimal>("TotalBalance")
                        .HasColumnType("numeric")
                        .HasColumnName("saldo_total");

                    b.Property<int>("TotalUnits")
                        .HasColumnType("integer")
                        .HasColumnName("unidades_totales");

                    b.HasKey("TrustId");

                    b.ToTable("fideicomisos", "fideicomisos");
                });

            modelBuilder.Entity("Trusts.Domain.TrustHistories.TrustHistory", b =>
                {
                    b.HasOne("Trusts.Domain.Trusts.Trust", null)
                        .WithMany()
                        .HasForeignKey("TrustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
