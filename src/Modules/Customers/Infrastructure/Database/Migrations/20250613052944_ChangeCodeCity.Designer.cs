// <auto-generated />
using System;
using System.Text.Json;
using Customers.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Customers.Infrastructure.Database.Migrations
{
    [DbContext(typeof(CustomersDbContext))]
    [Migration("20250613052944_ChangeCodeCity")]
    partial class ChangeCodeCity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("personas")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Common.SharedKernel.Domain.ConfigurationParameters.ConfigurationParameter", b =>
                {
                    b.Property<int>("ConfigurationParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConfigurationParameterId"));

                    b.Property<bool>("Editable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("editable");

                    b.Property<string>("HomologationCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("codigo_homologacion");

                    b.Property<JsonDocument>("Metadata")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasColumnName("metadata")
                        .HasDefaultValueSql("'{}'");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("padre_id");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<bool>("System")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("sistema");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("categoria")
                        .HasColumnName("tipo");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.HasKey("ConfigurationParameterId");

                    b.HasIndex("ParentId");

                    b.ToTable("parametros_configuracion", "personas");
                });

            modelBuilder.Entity("Customers.Domain.Countries.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CountryId"));

                    b.Property<string>("DaneCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_dane");

                    b.Property<string>("HomologatedCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_homologado");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_abreviado");

                    b.HasKey("CountryId");

                    b.ToTable("paises", "personas");
                });

            modelBuilder.Entity("Customers.Domain.EconomicActivities.EconomicActivity", b =>
                {
                    b.Property<int>("EconomicActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EconomicActivityId"));

                    b.Property<string>("CiiuCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_ciiu");

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_clase");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("DivisionCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_division");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_division");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codgrupo");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_grupo");

                    b.Property<string>("HomologatedCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_homologado");

                    b.HasKey("EconomicActivityId");

                    b.ToTable("actividades_economicas", "personas");
                });

            modelBuilder.Entity("Customers.Domain.Municipalities.Municipality", b =>
                {
                    b.Property<int>("MunicipalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MunicipalityId"));

                    b.Property<int>("CityCode")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_municipio");

                    b.Property<int>("DaneCode")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_dane");

                    b.Property<int>("DialingCode")
                        .HasColumnType("integer")
                        .HasColumnName("indicativo");

                    b.Property<string>("HomologatedCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_homologado");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.HasKey("MunicipalityId");

                    b.ToTable("municipios", "personas");
                });

            modelBuilder.Entity("Customers.Domain.People.Person", b =>
                {
                    b.Property<long>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PersonId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<int>("CountryOfResidenceId")
                        .HasColumnType("integer")
                        .HasColumnName("pais_residencia_id");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("departamento_id");

                    b.Property<Guid>("DocumentType")
                        .HasColumnType("uuid")
                        .HasColumnName("tipo_documento_uuid");

                    b.Property<int>("EconomicActivityId")
                        .HasColumnType("integer")
                        .HasColumnName("actividad_economica_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("primer_nombre");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_completo");

                    b.Property<int>("GenderId")
                        .HasColumnType("integer")
                        .HasColumnName("sexo_id");

                    b.Property<string>("HomologatedCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_homologado");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identificacion");

                    b.Property<int>("InvestorTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_inversionista_id");

                    b.Property<bool>("IsDeclarant")
                        .HasColumnType("boolean")
                        .HasColumnName("declarante");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("primer_apellido");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text")
                        .HasColumnName("segundo_nombre");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("celular");

                    b.Property<int>("MunicipalityId")
                        .HasColumnType("integer")
                        .HasColumnName("municipio_id");

                    b.Property<int>("RiskProfileId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_riesgo_id");

                    b.Property<string>("SecondLastName")
                        .HasColumnType("text")
                        .HasColumnName("segundo_apellido");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("estado");

                    b.HasKey("PersonId");

                    b.ToTable("personas", "personas");
                });

            modelBuilder.Entity("Common.SharedKernel.Domain.ConfigurationParameters.ConfigurationParameter", b =>
                {
                    b.HasOne("Common.SharedKernel.Domain.ConfigurationParameters.ConfigurationParameter", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Common.SharedKernel.Domain.ConfigurationParameters.ConfigurationParameter", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
