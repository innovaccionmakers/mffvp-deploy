// <auto-generated />
using System;
using Contributions.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Contributions.Infrastructure.Database.Migrations.Contributions
{
    [DbContext(typeof(ContributionsDbContext))]
    [Migration("20250430142903_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("contributions")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Contributions.Domain.ClientOperations.ClientOperation", b =>
                {
                    b.Property<Guid>("ClientOperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AffiliateId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("integer");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer");

                    b.Property<int>("SubTransactionTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("integer");

                    b.HasKey("ClientOperationId");

                    b.ToTable("ClientOperations", "contributions");
                });

            modelBuilder.Entity("Contributions.Domain.TrustOperations.TrustOperation", b =>
                {
                    b.Property<Guid>("TrustOperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ClientOperationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TrustId")
                        .HasColumnType("uuid");

                    b.HasKey("TrustOperationId");

                    b.HasIndex("ClientOperationId");

                    b.HasIndex("TrustId");

                    b.ToTable("TrustOperations", "contributions");
                });

            modelBuilder.Entity("Contributions.Domain.Trusts.Trust", b =>
                {
                    b.Property<Guid>("TrustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AffiliateId")
                        .HasColumnType("integer");

                    b.Property<decimal>("AvailableBalance")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ContingentWithholding")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Earnings")
                        .HasColumnType("numeric");

                    b.Property<decimal>("EarningsWithholding")
                        .HasColumnType("numeric");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("integer");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Principal")
                        .HasColumnType("numeric");

                    b.Property<int>("TaxCondition")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalBalance")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalUnits")
                        .HasColumnType("numeric");

                    b.HasKey("TrustId");

                    b.ToTable("Trusts", "contributions");
                });

            modelBuilder.Entity("Contributions.Domain.TrustOperations.TrustOperation", b =>
                {
                    b.HasOne("Contributions.Domain.ClientOperations.ClientOperation", null)
                        .WithMany()
                        .HasForeignKey("ClientOperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Contributions.Domain.Trusts.Trust", null)
                        .WithMany()
                        .HasForeignKey("TrustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
