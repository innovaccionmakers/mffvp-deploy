DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_extension WHERE extname = 'uuid-ossp') THEN
        CREATE EXTENSION "uuid-ossp";
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_namespace WHERE nspname = 'security') THEN
        CREATE SCHEMA security;
    END IF;
END $$;
DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'seguridad') THEN
        CREATE SCHEMA seguridad;
    END IF;
END $$;
CREATE TABLE IF NOT EXISTS seguridad."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'seguridad') THEN
        CREATE SCHEMA seguridad;
    END IF;
END $$;

CREATE TABLE seguridad.roles (
    id integer NOT NULL,
    nombre text NOT NULL,
    objetivo text NOT NULL,
    CONSTRAINT "PK_roles" PRIMARY KEY (id)
);

CREATE TABLE seguridad.usuarios (
    id integer NOT NULL,
    nombre_usuario text NOT NULL,
    nombre text NOT NULL,
    segundo_nombre text NOT NULL,
    identificacion text NOT NULL,
    correo text NOT NULL,
    nombre_mostrar text NOT NULL,
    CONSTRAINT "PK_usuarios" PRIMARY KEY (id)
);

CREATE TABLE seguridad.roles_permisos (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    rol_id integer NOT NULL,
    permiso text NOT NULL,
    CONSTRAINT "PK_roles_permisos" PRIMARY KEY (id),
    CONSTRAINT "FK_roles_permisos_roles_rol_id" FOREIGN KEY (rol_id) REFERENCES seguridad.roles (id) ON DELETE CASCADE
);

CREATE TABLE seguridad.usuarios_permisos (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    usuario_id integer NOT NULL,
    permiso integer NOT NULL,
    concedido boolean NOT NULL,
    CONSTRAINT "PK_usuarios_permisos" PRIMARY KEY (id),
    CONSTRAINT "FK_usuarios_permisos_usuarios_usuario_id" FOREIGN KEY (usuario_id) REFERENCES seguridad.usuarios (id) ON DELETE CASCADE
);

CREATE TABLE seguridad.usuarios_roles (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    rol_permiso_id integer NOT NULL,
    usuario_id integer NOT NULL,
    CONSTRAINT "PK_usuarios_roles" PRIMARY KEY (id),
    CONSTRAINT "FK_usuarios_roles_roles_permisos_rol_permiso_id" FOREIGN KEY (rol_permiso_id) REFERENCES seguridad.roles_permisos (id) ON DELETE CASCADE,
    CONSTRAINT "FK_usuarios_roles_usuarios_usuario_id" FOREIGN KEY (usuario_id) REFERENCES seguridad.usuarios (id) ON DELETE CASCADE
);

CREATE INDEX "IX_roles_permisos_rol_id" ON seguridad.roles_permisos (rol_id);

CREATE INDEX "IX_usuarios_permisos_usuario_id" ON seguridad.usuarios_permisos (usuario_id);

CREATE INDEX "IX_usuarios_roles_rol_permiso_id" ON seguridad.usuarios_roles (rol_permiso_id);

CREATE INDEX "IX_usuarios_roles_usuario_id" ON seguridad.usuarios_roles (usuario_id);

INSERT INTO seguridad."__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250706000902_InitialCreate', '9.0.3');


