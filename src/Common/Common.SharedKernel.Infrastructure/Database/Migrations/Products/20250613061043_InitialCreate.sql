DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'productos') THEN
        CREATE SCHEMA productos;
    END IF;
END $EF$;
CREATE TABLE IF NOT EXISTS productos."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'productos') THEN
        CREATE SCHEMA productos;
    END IF;
END $EF$;

CREATE TABLE productos.bancos (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    nombre text NOT NULL,
    CONSTRAINT "PK_bancos" PRIMARY KEY (id)
);

CREATE TABLE productos.ciudades (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    nombre text NOT NULL,
    CONSTRAINT "PK_ciudades" PRIMARY KEY (id)
);

CREATE TABLE productos.comerciales (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    nombre text NOT NULL,
    prefijo text NOT NULL,
    estado text NOT NULL,
    codigo_homologado text NOT NULL,
    CONSTRAINT "PK_comerciales" PRIMARY KEY (id)
);

CREATE TABLE productos.fondos_voluntarios_pensiones (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    tipo_documento integer NOT NULL,
    identificacion integer NOT NULL,
    nombre text NOT NULL,
    nombre_corto text NOT NULL,
    estado integer NOT NULL,
    codigo_homologado text NOT NULL,
    CONSTRAINT "PK_fondos_voluntarios_pensiones" PRIMARY KEY (id)
);

CREATE TABLE productos.oficinas (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    nombre text NOT NULL,
    prefijo text NOT NULL,
    ciudad_id integer NOT NULL,
    estado integer NOT NULL,
    codigo_homologado text NOT NULL,
    CONSTRAINT "PK_oficinas" PRIMARY KEY (id)
);

CREATE TABLE productos.parametros_configuracion (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    uuid uuid NOT NULL DEFAULT (uuid_generate_v4()),
    nombre character varying(100) NOT NULL,
    padre_id integer,
    estado boolean NOT NULL DEFAULT TRUE,
    tipo character varying(50) NOT NULL DEFAULT 'categoria',
    editable boolean NOT NULL DEFAULT TRUE,
    sistema boolean NOT NULL DEFAULT FALSE,
    metadata jsonb NOT NULL DEFAULT ('{}'),
    codigo_homologacion character varying(20) NOT NULL,
    CONSTRAINT "PK_parametros_configuracion" PRIMARY KEY (id),
    CONSTRAINT "FK_parametros_configuracion_parametros_configuracion_padre_id" FOREIGN KEY (padre_id) REFERENCES productos.parametros_configuracion (id) ON DELETE RESTRICT
);

CREATE TABLE productos.planes (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    nombre text NOT NULL,
    descripcion text NOT NULL,
    codigo_homologado text NOT NULL,
    CONSTRAINT "PK_planes" PRIMARY KEY (id)
);

CREATE TABLE productos.portafolios (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    nombre text NOT NULL,
    nombre_corto text NOT NULL,
    modalidad_id integer NOT NULL,
    aporte_minimo_inicial numeric NOT NULL,
    aporte_minimo_adicional numeric NOT NULL,
    fecha_actual timestamp with time zone NOT NULL,
    codigo_homologacion text NOT NULL,
    estado text NOT NULL,
    CONSTRAINT "PK_portafolios" PRIMARY KEY (id)
);

CREATE TABLE productos.planes_fondo (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    plan_id integer NOT NULL,
    fondo_id integer NOT NULL,
    estado integer NOT NULL,
    CONSTRAINT "PK_planes_fondo" PRIMARY KEY (id),
    CONSTRAINT "FK_planes_fondo_fondos_voluntarios_pensiones_fondo_id" FOREIGN KEY (fondo_id) REFERENCES productos.fondos_voluntarios_pensiones (id) ON DELETE CASCADE,
    CONSTRAINT "FK_planes_fondo_planes_plan_id" FOREIGN KEY (plan_id) REFERENCES productos.planes (id) ON DELETE CASCADE
);

CREATE TABLE productos.alternativas (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    tipo_alternativa_id integer NOT NULL,
    nombre text NOT NULL,
    descripcion text NOT NULL,
    planes_fondo_id integer NOT NULL,
    estado text NOT NULL,
    "codigo_homologado)" text NOT NULL,
    CONSTRAINT "PK_alternativas" PRIMARY KEY (id),
    CONSTRAINT "FK_alternativas_planes_fondo_planes_fondo_id" FOREIGN KEY (planes_fondo_id) REFERENCES productos.planes_fondo (id) ON DELETE CASCADE
);

CREATE TABLE productos.alternativas_portafolios (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "AlternativeId" integer NOT NULL,
    "PortfolioId" integer NOT NULL,
    recaudador boolean NOT NULL,
    estado text NOT NULL,
    CONSTRAINT "PK_alternativas_portafolios" PRIMARY KEY (id),
    CONSTRAINT "FK_alternativas_portafolios_alternativas_AlternativeId" FOREIGN KEY ("AlternativeId") REFERENCES productos.alternativas (id) ON DELETE CASCADE,
    CONSTRAINT "FK_alternativas_portafolios_portafolios_PortfolioId" FOREIGN KEY ("PortfolioId") REFERENCES productos.portafolios (id) ON DELETE CASCADE
);

CREATE TABLE productos.objetivos (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    tipo_objetivo_id integer NOT NULL,
    afiliado_id integer NOT NULL,
    alternativa_id integer NOT NULL,
    nombre text NOT NULL,
    fecha_creacion timestamp with time zone NOT NULL,
    comercial_id integer NOT NULL,
    oficina_apertura_id integer NOT NULL,
    oficina_actual_id integer NOT NULL,
    saldo numeric(19,2) NOT NULL,
    estado integer NOT NULL,
    CONSTRAINT "PK_objetivos" PRIMARY KEY (id),
    CONSTRAINT "FK_objetivos_alternativas_alternativa_id" FOREIGN KEY (alternativa_id) REFERENCES productos.alternativas (id) ON DELETE CASCADE,
    CONSTRAINT "FK_objetivos_comerciales_comercial_id" FOREIGN KEY (comercial_id) REFERENCES productos.comerciales (id) ON DELETE CASCADE
);

CREATE INDEX "IX_alternativas_planes_fondo_id" ON productos.alternativas (planes_fondo_id);

CREATE INDEX "IX_alternativas_portafolios_AlternativeId" ON productos.alternativas_portafolios ("AlternativeId");

CREATE INDEX "IX_alternativas_portafolios_PortfolioId" ON productos.alternativas_portafolios ("PortfolioId");

CREATE INDEX "IX_objetivos_alternativa_id" ON productos.objetivos (alternativa_id);

CREATE INDEX "IX_objetivos_comercial_id" ON productos.objetivos (comercial_id);

CREATE INDEX "IX_parametros_configuracion_padre_id" ON productos.parametros_configuracion (padre_id);

CREATE INDEX "IX_planes_fondo_fondo_id" ON productos.planes_fondo (fondo_id);

CREATE INDEX "IX_planes_fondo_plan_id" ON productos.planes_fondo (plan_id);

INSERT INTO productos."__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250613061043_InitialCreate', '9.0.3');

COMMIT;

